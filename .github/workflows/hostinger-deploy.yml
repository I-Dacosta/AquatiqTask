name: Deploy to Hostinger VPS

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/**'
      - 'docs/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: 🚀 Starting deployment to Hostinger VPS
        run: |
          echo "🌐 Deploying to: 31.97.38.31"
          echo "📦 Branch: ${{ github.ref_name }}"
          echo "👤 Triggered by: ${{ github.actor }}"
          echo "💬 Commit: ${{ github.event.head_commit.message }}"

      - name: 🔐 Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.HOSTINGER_SSH_KEY }}

      - name: 🔑 Add Hostinger to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 31.97.38.31 >> ~/.ssh/known_hosts

      - name: 📥 Pull latest code on VPS
        run: |
          ssh root@31.97.38.31 << 'EOF'
            set -e
            echo "📂 Navigating to deployment directory..."
            cd /opt/TaskPriority
            
            echo "🔄 Pulling latest changes from GitHub..."
            git fetch origin
            git reset --hard origin/main
            
            echo "✅ Code updated successfully!"
          EOF

      - name: 🔨 Build and restart services
        run: |
          ssh root@31.97.38.31 << 'EOF'
            set -e
            cd /opt/TaskPriority
            
            echo "🏗️  Building AI service..."
            docker compose -f docker-compose-ip.yml build ai-prioritization
            
            echo "🏗️  Building frontend..."
            docker compose -f docker-compose-ip.yml build frontend
            
            echo "🔄 Restarting services..."
            docker compose -f docker-compose-ip.yml up -d
            
            echo "⏳ Waiting for services to stabilize..."
            sleep 20
          EOF

      - name: 🏥 Health checks
        run: |
          ssh root@31.97.38.31 << 'EOF'
            set -e
            cd /opt/TaskPriority
            
            echo "🔍 Checking service status..."
            docker compose -f docker-compose-ip.yml ps
            
            echo ""
            echo "🩺 Testing AI service health..."
            curl -f http://localhost:8000/health || exit 1
            
            echo ""
            echo "🩺 Testing n8n availability..."
            curl -f -o /dev/null -s -w "HTTP %{http_code}\n" http://localhost:5678 || exit 1
            
            echo ""
            echo "🩺 Testing frontend health..."
            curl -f http://localhost:3000/api/health || exit 1
            
            echo ""
            echo "🩺 Testing PostgreSQL..."
            docker compose -f docker-compose-ip.yml exec -T postgres pg_isready -U prioai_user || exit 1
          EOF

      - name: ✅ Deployment complete
        run: |
          echo "🎉 Deployment successful!"
          echo ""
          echo "🌐 Services available at:"
          echo "   Frontend:   http://31.97.38.31:3000"
          echo "   n8n:        http://31.97.38.31:5678"
          echo "   AI Service: http://31.97.38.31:8000"
          echo "   API Docs:   http://31.97.38.31:8000/docs"

      - name: ❌ Deployment failed
        if: failure()
        run: |
          echo "💥 Deployment failed! Check logs:"
          ssh root@31.97.38.31 "cd /opt/TaskPriority && docker compose -f docker-compose-ip.yml logs --tail 50"